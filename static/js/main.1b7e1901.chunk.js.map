{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","url.ts","index.tsx"],"names":["GoodsList","goods","className","map","good","key","id","style","color","name","App","useState","setGoods","upload","setUpload","goodsFromServer","a","fetch","then","response","json","data","requestFromServer","type","onClick","filteredGoods","sort","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"+OAOaA,G,MAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,wBAAIC,UAAU,QAEVD,EAAME,KAAI,SAAAC,GAAI,OACZ,wBACEC,IAAKD,EAAKE,GACVC,MAAO,CAAEC,MAAOJ,EAAKI,QAEpBJ,EAAKK,YCuDHC,EAjEO,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACnBV,EADmB,KACZW,EADY,OAEED,oBAAS,GAFX,mBAEnBE,EAFmB,KAEXC,EAFW,KAIpBC,EAAe,uCAAG,4BAAAC,EAAA,6DACtBF,GAAU,GADY,SCN+BG,MAFzC,2CAGbC,MACC,SAAAC,GAAQ,OAAIA,EAASC,UACrBF,MACA,SAAAG,GAAI,OAAIA,EAAKA,QDES,cAEhBC,EAFgB,OAItBR,GAAU,GAJY,kBAMfQ,GANe,2CAAH,qDA8BrB,OACE,yBAAKpB,UAAU,QACb,qDACA,4BACEqB,KAAK,SACLC,QA1Be,WACnBT,IAAkBG,MAAK,SAAAG,GAAI,OAAIT,EAASS,OA0BpCnB,UAAU,UAHZ,kBAOA,4BACEqB,KAAK,SACLC,QA7BqB,WACzBT,IAAkBG,MAAK,SAAAG,GACrB,IAAMI,EAAgBJ,EAAKK,MAAK,SAACV,EAAGW,GAAJ,OAAUX,EAAEP,KAAKmB,cAAcD,EAAElB,SAC9DoB,MAAM,EAAG,GAEZjB,EAASa,OAyBPvB,UAAU,UAHZ,sBAOA,4BACEqB,KAAK,SACLC,QA3Be,WACnBT,IAAkBG,MAAK,SAAAG,GACrB,IAAMI,EAAgBJ,EAAKS,QAAO,SAAA1B,GAAI,MAAmB,QAAfA,EAAKI,SAE/CI,EAASa,OAwBPvB,UAAU,UAHZ,kBAQEW,EAAS,GAAK,kBAAC,EAAD,CAAWZ,MAAOA,ME7DxC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1b7e1901.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../interfaces';\n\ninterface GoodsListProps {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {\n        goods.map(good => (\n          <li\n            key={good.id}\n            style={{ color: good.color }}\n          >\n            {good.name}\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { responseFromServer } from './url';\nimport { Good } from './interfaces';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [upload, setUpload] = useState(false);\n\n  const goodsFromServer = async (): Promise<Good[]> => {\n    setUpload(true);\n    const requestFromServer = await responseFromServer();\n\n    setUpload(false);\n\n    return requestFromServer;\n  };\n\n  const loadAllGoods = () => {\n    goodsFromServer().then(data => setGoods(data));\n  };\n\n  const loadFiveFirstGoods = () => {\n    goodsFromServer().then(data => {\n      const filteredGoods = data.sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5);\n\n      setGoods(filteredGoods);\n    });\n  };\n\n  const loadRegGoods = () => {\n    goodsFromServer().then(data => {\n      const filteredGoods = data.filter(good => good.color === 'red');\n\n      setGoods(filteredGoods);\n    });\n  };\n\n  return (\n    <div className=\"wrap\">\n      <h1>Dynamic list of Goods</h1>\n      <button\n        type=\"button\"\n        onClick={loadAllGoods}\n        className=\"button\"\n      >\n        Load All Goods\n      </button>\n      <button\n        type=\"button\"\n        onClick={loadFiveFirstGoods}\n        className=\"button\"\n      >\n        Load 5 first goods\n      </button>\n      <button\n        type=\"button\"\n        onClick={loadRegGoods}\n        className=\"button\"\n      >\n        Load red goods\n      </button>\n      {\n        upload ? '' : <GoodsList goods={goods} />\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import { Good } from './interfaces';\n\nconst API_URL = 'https://mate.academy/students-api/goods';\n\nexport const responseFromServer = (): Promise<Good[]> => fetch(API_URL)\n  .then(\n    response => response.json(),\n  ).then(\n    data => data.data,\n  );\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}